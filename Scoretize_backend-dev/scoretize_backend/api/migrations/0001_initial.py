# Generated by Django 4.0.4 on 2022-07-06 07:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('password', models.TextField(max_length=255)),
                ('name', models.CharField(max_length=50, null=True)),
                ('surname', models.CharField(max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=17)),
                ('photo', models.CharField(blank=True, max_length=255)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_emailMarketing', models.BooleanField(default=True)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('stripe_id', models.BigIntegerField(blank=True, null=True)),
                ('stripe_isActive', models.BooleanField(default=False)),
                ('stripe_endDate', models.DateTimeField(auto_now=True)),
                ('stripe_subscriptionID', models.BigIntegerField(blank=True, null=True)),
                ('stripe_subscriptionPlan', models.CharField(max_length=255)),
                ('is_termsOfServicePrivacyPolicy', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('public_id', models.BigIntegerField(blank=True)),
                ('name', models.CharField(max_length=255)),
                ('adress', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=255)),
                ('state', models.CharField(blank=True, max_length=255)),
                ('country', models.CharField(blank=True, max_length=255)),
                ('vat', models.CharField(blank=True, max_length=255)),
                ('url', models.CharField(blank=True, max_length=255)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('url', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='name', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('competitor_1', models.CharField(max_length=255)),
                ('competitor_2', models.CharField(max_length=255)),
                ('competitor_3', models.CharField(max_length=255)),
                ('competitor_4', models.CharField(max_length=255)),
                ('competitor_5', models.CharField(max_length=255)),
                ('competitor_6', models.CharField(max_length=255, null=True)),
                ('competitor_7', models.CharField(max_length=255, null=True)),
                ('competitor_8', models.CharField(max_length=255, null=True)),
                ('competitor_9', models.CharField(max_length=255, null=True)),
                ('competitor_10', models.CharField(max_length=255, null=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.company')),
            ],
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Social_media',
            fields=[
                ('social_id', models.AutoField(primary_key=True, serialize=False)),
                ('initial_date', models.DateTimeField(auto_now=True)),
                ('global_engagement_rate', models.FloatField(max_length=255, null=True)),
                ('total_followers', models.BigIntegerField(null=True)),
                ('total_average_interactions', models.FloatField(max_length=255, null=True)),
                ('total_clicks', models.BigIntegerField(null=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.company')),
            ],
        ),
        migrations.CreateModel(
            name='User_Type',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Website',
            fields=[
                ('website_id', models.AutoField(primary_key=True, serialize=False)),
                ('initial_date', models.DateTimeField(auto_now=True)),
                ('mobile_page_speed', models.FloatField(max_length=255, null=True)),
                ('desktop_page_speed', models.FloatField(max_length=255, null=True)),
                ('bounce_rate', models.FloatField(max_length=255, null=True)),
                ('monthly_traffic', models.FloatField(max_length=255, null=True)),
                ('pages_visit', models.FloatField(max_length=255, null=True)),
                ('avg_TimeOnSite', models.CharField(max_length=255, null=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.company')),
            ],
        ),
        migrations.CreateModel(
            name='Youtube',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('video_count', models.BigIntegerField(null=True)),
                ('view_count', models.BigIntegerField(null=True)),
                ('subscriber_count', models.BigIntegerField(null=True)),
                ('like_count', models.BigIntegerField(null=True)),
                ('comment_count', models.BigIntegerField(null=True)),
                ('social_media', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.social_media')),
            ],
        ),
        migrations.CreateModel(
            name='Website_traffic',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('direct_traffic', models.BigIntegerField(null=True)),
                ('paid_traffic', models.BigIntegerField(null=True)),
                ('organic_traffic', models.BigIntegerField(null=True)),
                ('country_first', models.CharField(max_length=255, null=True)),
                ('country_second', models.CharField(max_length=255, null=True)),
                ('country_third', models.CharField(max_length=255, null=True)),
                ('country_forth', models.CharField(max_length=255, null=True)),
                ('country_fifth', models.CharField(max_length=255, null=True)),
                ('country_value_first', models.BigIntegerField(null=True)),
                ('country_value_second', models.BigIntegerField(null=True)),
                ('country_value_third', models.BigIntegerField(null=True)),
                ('country_value_forth', models.BigIntegerField(null=True)),
                ('country_value_fifth', models.BigIntegerField(null=True)),
                ('social_traffic', models.BigIntegerField(null=True)),
                ('social_first', models.CharField(max_length=255, null=True)),
                ('social_second', models.CharField(max_length=255, null=True)),
                ('social_third', models.CharField(max_length=255, null=True)),
                ('social_value_first', models.BigIntegerField(null=True)),
                ('social_value_second', models.BigIntegerField(null=True)),
                ('social_value_third', models.BigIntegerField(null=True)),
                ('reffered_traffic', models.BigIntegerField(null=True)),
                ('mail_traffic', models.BigIntegerField(null=True)),
                ('website', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.website')),
            ],
        ),
        migrations.CreateModel(
            name='UserProject',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.project')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Twitter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('followers_count', models.BigIntegerField(null=True)),
                ('following_count', models.BigIntegerField(null=True)),
                ('avg_retweet_count', models.FloatField(max_length=255, null=True)),
                ('avg_reply_count', models.FloatField(max_length=255, null=True)),
                ('avg_likes_count', models.FloatField(max_length=255, null=True)),
                ('listed_count', models.BigIntegerField(null=True)),
                ('tweet_count', models.BigIntegerField(null=True)),
                ('social_media', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.social_media')),
            ],
        ),
        migrations.CreateModel(
            name='Seo',
            fields=[
                ('seo_id', models.AutoField(primary_key=True, serialize=False)),
                ('initial_date', models.DateTimeField(auto_now=True)),
                ('organic_traffic', models.FloatField(max_length=255, null=True)),
                ('web_authority', models.FloatField(max_length=255, null=True)),
                ('total_keywords', models.FloatField(max_length=255, null=True)),
                ('avg_keywords_search', models.FloatField(max_length=255, null=True)),
                ('traffic_value', models.FloatField(max_length=255, null=True)),
                ('paid_traffic', models.FloatField(max_length=255, null=True)),
                ('estimatedCPC', models.FloatField(max_length=255, null=True)),
                ('paid_keywords', models.FloatField(max_length=255, null=True)),
                ('estm_ppc_budget', models.FloatField(max_length=255, null=True)),
                ('backlinks', models.FloatField(max_length=255, null=True)),
                ('referring_domains', models.FloatField(max_length=255, null=True)),
                ('avg_organic_rank', models.FloatField(max_length=255, null=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.company')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='sector',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.sector'),
        ),
        migrations.CreateModel(
            name='Instagram',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('posts', models.BigIntegerField(null=True)),
                ('followers', models.BigIntegerField(null=True)),
                ('avg_post_likes', models.FloatField(max_length=255, null=True)),
                ('avg_post_comments', models.FloatField(max_length=255, null=True)),
                ('social_media', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.social_media')),
            ],
        ),
        migrations.CreateModel(
            name='Industry_wise_scores',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('initial_date', models.DateTimeField(auto_now=True)),
                ('company_id', models.BigIntegerField()),
                ('global_score', models.FloatField(max_length=255)),
                ('website_score', models.FloatField(max_length=255)),
                ('sm_score', models.FloatField(max_length=255)),
                ('sm_facebook_score', models.FloatField(max_length=255)),
                ('sm_instagram_score', models.FloatField(max_length=255)),
                ('sm_youtube_score', models.FloatField(max_length=255)),
                ('sm_twitter_score', models.FloatField(max_length=255)),
                ('seo_score', models.FloatField(max_length=255)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.project')),
            ],
        ),
        migrations.CreateModel(
            name='Facebook',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('likes', models.BigIntegerField(null=True)),
                ('followers', models.BigIntegerField(null=True)),
                ('avg_post_likes', models.FloatField(max_length=255, null=True)),
                ('avg_post_comments', models.FloatField(max_length=255, null=True)),
                ('avg_post_shares', models.FloatField(max_length=255, null=True)),
                ('social_media', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.social_media')),
            ],
        ),
        migrations.CreateModel(
            name='Company_wise_scores',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('initial_date', models.DateTimeField(auto_now=True)),
                ('company_id', models.BigIntegerField()),
                ('global_score', models.FloatField(max_length=255)),
                ('website_score', models.FloatField(max_length=255)),
                ('sm_score', models.FloatField(max_length=255)),
                ('sm_facebook_score', models.FloatField(max_length=255)),
                ('sm_instagram_score', models.FloatField(max_length=255)),
                ('sm_youtube_score', models.FloatField(max_length=255)),
                ('sm_twitter_score', models.FloatField(max_length=255)),
                ('seo_score', models.FloatField(max_length=255)),
                ('searchAds_score', models.FloatField(max_length=255)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.project')),
            ],
        ),
        migrations.AddField(
            model_name='users',
            name='account',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.account'),
        ),
        migrations.AddField(
            model_name='users',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='users',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='users',
            name='user_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.user_type'),
        ),
    ]
